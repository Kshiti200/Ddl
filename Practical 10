#include <iostream>
using namespace std;

class Deque 
{
private:
    int *arr;
    int front;
    int rear;
    int size;
    int capacity;

public:
    void initialize(int cap) 
	{
        capacity = cap;
        arr = new int[capacity];
        front = -1;
        rear = -1;
        size = 0;
    }
    ~Deque() 
	{
        delete[] arr;
    }

    bool isFull() 
	{
        return size == capacity;
    }

    bool isEmpty() 
	{
        return size == 0;
    }

    void addFront(int value) 
	{
        if (isFull()) 
		{
            cout << "Deque is full! Cannot add at front." << endl;
            return;
        }
        if (front == -1) 
		{
            front = 0;
            rear = 0;
        } else 
		{
            front = (front - 1 + capacity) % capacity;  
        }
        arr[front] = value;
        size++;
    }

    void addRear(int value) 
	{
        if (isFull()) 
		{
            cout << "Deque is full! Cannot add at rear." << endl;
            return;
        }
        if (rear == -1) 
		{  
            front = 0;
            rear = 0;
        } else 
		{
            rear = (rear + 1) % capacity; 
        }
        arr[rear] = value;
        size++;
    }

    void deleteFront() 
	{
        if (isEmpty()) 
		{
            cout << "Deque is empty! Cannot delete from front." << endl;
            return;
        }
        if (front == rear) 
		{  
            front = -1;
            rear = -1;
        } else 
		{
            front = (front + 1) % capacity;  
        }
        size--;
    }

    void deleteRear() 
	{
        if (isEmpty()) 
		{
            cout << "Deque is empty! Cannot delete from rear." << endl;
            return;
        }
        if (front == rear) 
		{  
            front = -1;
            rear = -1;
        } else 
		{
            rear = (rear - 1 + capacity) % capacity;  
        }
        size--;
    }

    void display() 
	{
        if (isEmpty()) 
		{
            cout << "Deque is empty!" << endl;
            return;
        }
        cout << "Deque elements: ";
        int i = front;
        for (int count = 0; count < size; count++) 
		{
            cout << arr[i] << " ";
            i = (i + 1) % capacity;  
        }
        cout << endl;
    }
};

int main() {
    Deque dq;  
    dq.initialize(5);

    int choice, value;

    do {
        cout << "\nDeque Operations Menu:\n";
        cout << "1. Add Front\n";
        cout << "2. Add Rear\n";
        cout << "3. Delete Front\n";
        cout << "4. Delete Rear\n";
        cout << "5. Display Deque\n";
        cout << "6. Exit\n";
        cout << "Enter your choice (1-6): ";
        cin >> choice;

        switch(choice) {
            case 1:
                cout << "Enter value to add at front: ";
                cin >> value;
                dq.addFront(value);
                break;

            case 2:
                cout << "Enter value to add at rear: ";
                cin >> value;
                dq.addRear(value);
                break;

            case 3:
                dq.deleteFront();
                break;

            case 4:
                dq.deleteRear();
                break;

            case 5:
                dq.display();
                break;

            case 6:
                cout << "Exiting program.\n";
                break;

            default:
                cout << "Invalid choice! Please try again.\n";
        }
    } while(choice != 6);  
    return 0;
}
