A = []
m = int(input("Enter the no of students attending the training program: "))
for i in range(m):
    roll = int(input("Enter the roll no of student: "))
    A.append(roll)

def linearsearch(A):
    while True:
        key = int(input("Enter the roll no for search: "))
        if key in A:
            print("Student present for the training program.")
        else:
            print("Student absent for the training program.")
        
        ch1 = int(input("Do you want to continue same searching algorithm? Press 1 for YES and 0 for NO: "))
        if ch1 != 1:
            break

def sentinelsearch(A):
    while True:
        key = int(input("Enter the roll no for search: "))
        A.append(key)  

        i = 0
        while A[i] != key:
            i+=1

        if i<m:
            print("Student present for the training program.")
        else:
            print("Student absent for the training program.")
    
        ch1 = int(input("Do you want to continue same searching algorithm? Press 1 for YES and 0 for NO: "))
        if ch1 != 1:
            break

def binarysearch(A, low, high):
    while True:
        key = int(input("Enter the roll no for search: "))
        A.sort()  
        flag = 0

        while low <= high:
            mid = (low + high) // 2
            if A[mid] == key:
                flag = 1
                break
            elif A[mid] < key:
                low = mid + 1
            else:
                high = mid - 1
        
        if flag == 1:
            print("Student present for the training program.")
        else:
            print("Student absent for the training program.")
        
        ch1 = int(input("Do you want to continue same searching algorithm? Press 1 for YES and 0 for NO: "))
        if ch1 != 1:
            break

def fibonacci(n):
    while True:
        key = int(input("Enter the roll no for search: "))
        
        f2 = 0
        f1 = 1
        f = f1 + f2
        while f < n:
            f2 = f1
            f1 = f
            f = f2 + f1
        
        offset = -1
        while f > 1:
            i = min(offset + f2, n - 1)
            if key > A[i]:
                f = f1
                f1 = f2
                f2 = f - f1
                offset = i
            elif key < A[i]:
                f = f2
                f1 = f1 - f2
                f2 = f - f1
            else:
                print("Student present for the training program.")
                break
        else:
            print("Student absent for the training program.")
        
        ch1 = int(input("Do you want to continue same searching algorithm? Press 1 for YES and 0 for NO: "))
        if ch1 != 1:
            break

while True:
    print("1. Linear search\n2. Sentinel search\n3. Binary search\n4. Fibonacci search\n5. Exit Search")
    ch = int(input("Enter your choice: "))
    if ch == 1:
        linearsearch(A)
    elif ch == 2:
        sentinelsearch(A)
    elif ch == 3:
        binarysearch(A, 0, m - 1)
    elif ch == 4:
        fibonacci(A)
    elif ch == 5:
        break
